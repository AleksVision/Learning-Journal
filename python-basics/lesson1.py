# Урок 1: Переменные и циклы в Python
# ===================================

# 1. ПЕРЕМЕННЫЕ
# -------------
# Переменная - это контейнер для хранения данных
# Может хранить числа, текст, списки и другие типы данных

# Числовая переменная
возраст = 25
print(f"Числовая переменная 'возраст' содержит: {возраст}")

# Текстовая переменная (строка)
имя = "Анна"
print(f"Строковая переменная 'имя' содержит: {имя}")

# Список - может хранить несколько значений
любимые_фрукты = ["яблоко", "банан", "апельсин"]
print(f"Список 'любимые_фрукты' содержит: {любимые_фрукты}")

# Словарь - хранит пары ключ-значение
контакты = {"Анна": "123-4567", "Борис": "987-6543"}
print(f"Словарь 'контакты' содержит: {контакты}")

# 2. ПРОСТОЙ ЦИКЛ FOR
# ------------------
# Цикл for используется для повторения действий определенное количество раз
# или для перебора элементов в последовательности

print("\nПример 1: Простой цикл с range()")
# range(5) создает последовательность чисел от 0 до 4
for i in range(5):
    print(f"Это шаг номер {i + 1}")

print("\nПример 2: Перебор элементов списка")
# Проходим по каждому фрукту в списке любимые_фрукты
for фрукт in любимые_фрукты:
    print(f"Мне нравится {фрукт}")

# 3. ЦИКЛ WHILE
# ------------
# Цикл while выполняется, пока условие истинно

print("\nПример цикла while:")
счетчик = 0
while счетчик < 3:
    print(f"счетчик = {счетчик}")
    счетчик += 1  # увеличиваем счетчик на 1

# 4. ВЛОЖЕННЫЕ ЦИКЛЫ
# -----------------
# Цикл внутри другого цикла

print("\nПример вложенных циклов:")
for i in range(3):
    for j in range(2):
        print(f"i = {i}, j = {j}")

# 5. ПРАКТИЧЕСКИЙ ПРИМЕР
# ---------------------
# Создадим таблицу умножения для числа 3

print("\nТаблица умножения для числа 3:")
число = 3
for i in range(1, 6):  # от 1 до 5
    результат = число * i
    print(f"{число} × {i} = {результат}")

# 6. ЦИКЛ С УСЛОВИЕМ BREAK
# ----------------------
# break используется для досрочного выхода из цикла

print("\nПример использования break:")
for i in range(10):
    if i == 4:
        print("Встретили число 4 - прерываем цикл")
        break
    print(f"Текущее число: {i}")

# 7. ЦИКЛ С УСЛОВИЕМ CONTINUE
# -------------------------
# continue пропускает текущую итерацию и переходит к следующей

print("\nПример использования continue:")
for i in range(5):
    if i == 2:
        print("Пропускаем число 2")
        continue
    print(f"Текущее число: {i}")

# 8. ФУНКЦИИ
# ----------
# Функция - это блок кода, который выполняет определенную задачу и может быть вызван многократно

# Определение функции
def приветствие(имя):
    """Эта функция выводит приветствие с указанным именем."""
    print(f"Привет, {имя}!")

# Вызов функции
приветствие("Анна")
приветствие("Борис")

# Функция с возвратом значения
def квадрат(число):
    """Эта функция возвращает квадрат числа."""
    return число * число

# Использование функции с возвратом значения
результат = квадрат(4)
print(f"Квадрат числа 4 равен {результат}")