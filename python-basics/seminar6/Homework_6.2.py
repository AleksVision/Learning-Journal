'''
Задание 6.2
Добавьте в пакет, созданный на семинаре шахматный модуль. Внутри него напишите код, решающий задачу о 8 ферзях. Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга. Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга. Программа получает на вход восемь пар чисел, каждое число от 1 до 8 - координаты 8 ферзей. Если ферзи не бьют друг друга верните истину, а если бьют - ложь.'''
from typing import List, Tuple

def is_safe(queens: list) -> bool:
    """
    Проверяет, не бьют ли друг друга ферзи, расставленные на доске.
    
    :param queens: Список из 8 пар чисел, где каждая пара — это координаты ферзя (строка, столбец).
    :return: True, если ферзи не бьют друг друга, иначе False.
    """
    rows = set()  # Множество для проверки уникальности строк
    cols = set()  # Множество для проверки уникальности столбцов
    diag1 = set()  # Множество для проверки уникальности первой диагонали (x - y)
    diag2 = set()  # Множество для проверки уникальности второй диагонали (x + y)

    for i, (row, col) in enumerate(queens):
        # Проверка, не совпадает ли строка, столбец или диагональ с предыдущими
        if row in rows or col in cols or (row - col) in diag1 or (row + col) in diag2:
            return False

        # Добавляем координаты в множества для дальнейшей проверки
        rows.add(row)
        cols.add(col)
        diag1.add(row - col)
        diag2.add(row + col)

    return True

# Пример использования:
queens = [
    (1, 1),  # Ферзь на позиции (1, 1)
    (2, 5),  # Ферзь на позиции (2, 5)
    (3, 8),  # Ферзь на позиции (3, 8)
    (4, 6),  # Ферзь на позиции (4, 6)
    (5, 3),  # Ферзь на позиции (5, 3)
    (6, 7),  # Ферзь на позиции (6, 7)
    (7, 2),  # Ферзь на позиции (7, 2)
    (8, 4),  # Ферзь на позиции (8, 4)
]

print(is_safe(queens))  # Вывод: True или False в зависимости от того, бьют ли ферзи друг друга
