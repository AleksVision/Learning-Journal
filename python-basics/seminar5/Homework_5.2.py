'''
Задание 5.2
Напишите однострочный генератор словаря, который принимает на вход три списка одинаковой длины: имена str, ставка int, премия str с указанием процентов вида “10.25%”. В результате получаем словарь с именем в качестве ключа и суммой премии в качестве значения. Сумма рассчитывается как ставка умноженная на процент премии.
Пример:
names = ["Alice", "Bob", "Charlie"]
rates = [1000, 1500, 2000]
bonuses = ["10.25%", "5.5%", "12%"]
result = calculate_bonus(names, rates, bonuses)
# Вывод:
# {'Alice': 102.5, 'Bob': 82.5, 'Charlie': 240.0}
# Примечание: Если в списке есть некорректные значения, например, вместо “10.25%” указано “10.25”,
# то необходимо обработать исключение и вывести сообщение об ошибке.
# Если в списке есть некорректные значения, например, вместо “10.25%” указано “10.25”,
# то необходимо обработать исключение и вывести сообщение об ошибке.
'''

from typing import List, Dict

def calculate_bonus(names: List[str], rates: List[int], bonuses: List[str]) -> Dict[str, float]:
    """
    Генератор словаря, который принимает на вход три списка одинаковой длины: имена, ставка, премия с указанием процентов.
    Возвращает словарь с именем в качестве ключа и суммой премии в качестве значения.
    Сумма рассчитывается как ставка умноженная на процент премии.
    
    :param names: Список имен.
    :param rates: Список ставок.
    :param bonuses: Список премий в формате "10.25%".
    :return: Словарь с именем и суммой премии.
    """
    if not (len(names) == len(rates) == len(bonuses)):
        raise ValueError("Списки должны иметь одинаковую длину.")

    result = {}
    for name, rate, bonus in zip(names, rates, bonuses):
        try:
            # Проверяем, что строка с бонусом содержит символ '%'
            if bonus[-1] != '%':
                raise ValueError(f"Некорректный формат премии для {name}: {bonus}")
            
            # Извлекаем процент и рассчитываем премию
            bonus_percent = float(bonus[:-1])
            bonus_amount = rate * (bonus_percent / 100)
            result[name] = bonus_amount
        
        except ValueError as e:
            # Обработка ошибки при некорректном формате премии
            print(f"Ошибка для {name}: {e}")

    return result

# Пример использования функции
names = ["Alice", "Bob", "Charlie"]
rates = [1000, 1500, 2000]
bonuses = ["10.25%", "5.5%", "12%"]

result = calculate_bonus(names, rates, bonuses)
print(result)
# Вывод:
# {'Alice': 102.5, 'Bob': 82.5, 'Charlie': 240.0}
